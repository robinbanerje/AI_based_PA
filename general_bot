import pyttsx3 #pip install pyttsx3  'to AI speak
import speech_recognition as sr #pip install speechRecognition
import datetime
import wikipedia #pip install wikipedia
import webbrowser
import os
# import smtplib   #to use SMTP

engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[1].id)   #using Zira's voice sample


def speak(audio):
    engine.say(audio)
    engine.runAndWait()


def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("Good Morning!")

    elif hour>=12 and hour<18:
        speak("Good Afternoon!")   

    else:
        speak("Good Evening!")  

    speak("Jini at your service")       

def takeCommand():
    #It takes microphone input from the user and returns string output

    r = sr.Recognizer()         # To recognise audio input
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 2
        audio = r.listen(source)

    try:
        print("Recognizing...")    
        query = r.recognize_google(audio, language='en')
        print(f"User said: {query}\n")

    except Exception as e:
        # print(e)    
        print("Sorry did not get... Say again please...")  
        return "None"
    return query

# def sendEmail(to, content):
#     server = smtplib.SMTP('smtp.gmail.com', 587)       #587 is less secure port 
#     server.ehlo()
#     server.starttls()
#     server.login('youremail@gmail.com', 'your-password')
#     server.sendmail('youremail@gmail.com', to, content)
#     server.close()

if __name__ == "__main__":
    wishMe()
    while (True):
        query = takeCommand().lower()

        # Logic for executing tasks based on query
        if 'wikipedia' in query:
            speak('Searching Wikipedia...')
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2)
            speak("According to Wikipedia")
            print(results)
            speak(results)

        elif 'open youtube' in query:
            webbrowser.open("youtube.com")

        elif 'open google' in query:
            webbrowser.open("google.com")

        elif 'open stackoverflow' in query:
            webbrowser.open("stackoverflow.com")   


        elif 'play music' in query:
            music_dir = 'D:\\DOWNLOAD'
            songs = os.listdir(music_dir)
            print(songs)    
            os.startfile(os.path.join(music_dir, songs[0]))

        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")    
            speak(f"The time is {strTime}")

        elif 'open code' in query:
            codePath = "C:\\Users\\ROBIN\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Visual Studio Code"
            os.startfile(codePath)

        elif ('quit','bye') in query:
            speak('Quiting... Happy to help!')
            exit() 

        elif 'email' in query:
            webbrowser.open("gmail.com")
            # try:
            #     speak("What should I say?")
            #     content = takeCommand()     #recognises the command and returns the string
            #     to = "harryyourEmail@gmail.com"    
            #     sendEmail(to, content)
            #     speak("Email has been sent!")
            # except Exception as e:
            #     print(e)
            #     speak("Sorry not able to send this email !!!")
        elif 'stock' in query or 'etf' in query:
            #tell status from moneycontrol.com
